# MongoDB setup
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  namespace: knoteapp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: knoteapp
spec:
  selector:
    app: mongo
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: knoteapp
spec:
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: storage
              mountPath: /data/db
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: mongo-pvc
---
# WebApp setup
apiVersion: apps/v1
kind: Deployment
metadata:
  name: knote
  namespace: knoteapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: knote
  template:
    metadata:
      labels:
        app: knote
    spec:
      containers:
        - name: app
          image: abhi1990/knoteapp:1.0.0
          ports:
            - containerPort: 3000
          env:
            - name: MONGO_URL
              value: mongodb://mongo:27017/dev
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: knote
  namespace: knoteapp
spec:
  selector:
    app: knote
  ports:
    - port: 80
      targetPort: 3000
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: knote-ingress
  namespace : knoteapp
spec:
  backend:
    serviceName: knote
    servicePort: 3000